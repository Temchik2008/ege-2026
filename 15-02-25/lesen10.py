#isalpha() возвращает тру если все символы непустой строки это буквы
x  = 'hello'
print(x.isalpha())
# isdigit() возвращает тру если все символы непустой строки это цифры
x ='233'
print(x.isdigit())
#isalnum() возвращает тру если все символы непустой строки это буквы или цифры
#isspace() возвращает тру если все символы непустой строки это пробельные символы
#isupper()/islower() возвращает тру если все символы непустой строки это символы в верхнем \ нижнем регистре
st = 'имя фамилия отчество'
print(st.split)
# string.split(разделитель sep, кол-во разделений maxsplit)
# Разделяет строку string на подстроки, используя sep как разделитель
# и возвращает список этих подстрок.
# Если параметр sep не указан, то считается, что он равен пробелу. Если указан параметр maxsplit, то делается не более maxsplit разбиений(т.е. список содержит maxsplit+1 строку).
# Параметр sep может содержать больше одного символа.
#partition() разбив на три подстроки и возвращает кортетж из трех элементов
#join
# возвращает строку, собранную из элементов последовательности
# string.join(iterable)
# применяется к строке string, которая будет вставлена между элементами последовательности iterable
# strip()
# возвращает копию строки, с обоих концов которой удалены указанные символы
# По умолчанию удаляются пробелы
# Методы rstrip() и lstrip() работают аналогично, но удаляют символы только с правого или левого конца, соответственно.
# replace()
# string.replace(old, new, count)
# Возвращает копию строки string, в которой все элементы old заменены на new
# Параметр count указывает, сколько элементов old необходимо заменить